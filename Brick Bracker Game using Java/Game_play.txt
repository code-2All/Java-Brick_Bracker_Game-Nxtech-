import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class GamePlay extends JPanel implements KeyListener, ActionListener {
    private boolean play = false;
    private int score = 0;

    private int totalBricker = 21;
    private Timer timer;
    private int delay = 8;
    private int playerx = 320;
    private int ballposx = 120;
    private int ballposy = 350;

    private int ballxdir = -1;
    private int ballydir = -2;

    private MapGenerator map;


    public GamePlay()
    {

        map = new MapGenerator(3,7);
        addKeyListener(this);
        setFocusable(true);
        setFocusTraversalKeysEnabled(false);
        timer = new Timer(delay, this);
        timer.start();
    }

    public void paint(Graphics g)
    {
        g.setColor(Color.WHITE);
        g.fillRect(1,1,692,592);

        map.draw((Graphics2D) g);

        g.setColor(Color.yellow);
        g.fillRect(0,0,3,592);
        g.fillRect(0,0,692,3);
        g.fillRect(691,0,3,592);

        g.setColor(Color.RED);
        g.setFont(new Font("serif",Font.BOLD,25));
        g.drawString("Score"+ " " +score,550,30);   //59 30

        g.setColor(Color.BLACK);
        g.fillRect(playerx,550,100,8);


        g.setColor(Color.BLACK);
        g.fillOval(ballposx,ballposy,20,20);

        if(ballposy>570)
        {
            play = false;
            ballxdir = 0;
            ballydir=0;
            g.setColor(Color.red);
            g.setFont(new Font("serif",Font.BOLD,30));
            g.drawString("Game Over !",190,300);

            g.setFont(new Font("serif",Font.BOLD,35));
            g.drawString("Press Enter to Restart",230,350);
        }

        g.dispose();


    }
    @Override
    public void actionPerformed(ActionEvent e) {
        timer.start();
        if(play){
            if(new Rectangle(ballposx,ballposy,20,20).intersects(new Rectangle(playerx,550,100,8)))
            {
                ballydir = -ballydir;
            }


       A :     for (int i=0;i<map.map.length;i++){
                for(int j=0;j<map.map[0].length;j++){
                    if(map.map[i][j]>0)
                    {
                        int brickx = j*map.brickWidth+80;
                        int bricky = i*map.brickHeight+50;
                        int brickWidth = map.brickWidth;
                        int brickHeight = map.brickHeight;

                        Rectangle rect = new Rectangle(brickx,bricky,brickWidth,brickHeight);
                        Rectangle ballRect = new Rectangle(ballposx,ballposy,20,20);
                        Rectangle brickRect = rect;

                        if(ballRect.intersects(brickRect)) {
                            map.setBrickValue(0, i, j);
                            totalBricker--;
                            score += 5;

                            if (ballposx + 19 <= brickRect.x || ballposx + 1 >= brickRect.x + brickRect.width) {
                                ballxdir = -ballxdir;
                            } else {
                                ballydir = -ballydir;

                            }
                            break A;
                        }
                    }
                }
            }
            ballposx += ballxdir;
            ballposy+= ballydir;

            if(ballposx< 0){
                ballxdir = -ballxdir;
            }

            if(ballposy<0){
                ballydir = -ballydir;
            }
            if(ballposx > 670){
                ballxdir = -ballxdir;
            }
        }
        repaint();

    }

    @Override
    public void keyTyped(KeyEvent e) {

    }

    @Override
    public void keyReleased(KeyEvent e) {

    }

    @Override
    public void keyPressed(KeyEvent e) {

                if(e.getKeyCode() == KeyEvent.VK_RIGHT)
                {
                    if(playerx>=600){
                        playerx = 600;
                    }else{
                        moveRight();
                    }
                }
                if(e.getKeyCode() == KeyEvent.VK_LEFT){
                    if(playerx<10){
                        playerx = 10;
                    }else{
                        moveLeft();
                    }
                }
                if(e.getKeyCode() == KeyEvent.VK_ENTER){
                    if(!play){
                        play = true;
                        ballposx = 120;
                        ballposy = 350;
                        ballxdir = -1;
                        ballydir = -2;
                        playerx = 310;
                        score =  0;
                        totalBricker = 21;
                        map = new MapGenerator(3,7);

                        repaint();
                    }
                }
    }



    private void moveRight() {
        play = true;
        playerx+=20;
    }

    private void moveLeft() {
        play=true;
        playerx-=20;
    }


}
